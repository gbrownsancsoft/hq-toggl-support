name: Angular Web CD
on:
  push:
    tags:
    - v*
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: platform/web/
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: platform/web/package-lock.json
    - name: Restore dependencies
      run: npm ci
    - name: Build
      run: npm run build --if-present
    - name: Upload Web Artifact
      uses: actions/upload-artifact@v3
      with:
        name: platform-web
        path: platform/web/dist/hq/**
        if-no-files-found: error
  publish:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: platform/web/
    permissions:
      contents: 'read'
      packages: 'write'
    env:
      REGISTRY: ghcr.io
      REPO_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: platform-web
          path: platform/web/dist/hq/
      - name: Set output
        id: vars
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          echo ::set-output name=version::${GITHUB_REF/refs\/tags\/v/}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Web to ghcr
        uses: docker/build-push-action@v3
        with:
          file: platform/web/Dockerfile
          context: platform/web/dist/hq/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}-web:${{ steps.vars.outputs.tag }}
          build-args: |
            VERSION=${{ steps.vars.outputs.version }}
          build-contexts: |
            src=platform/web/
